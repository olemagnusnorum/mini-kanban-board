{"ast":null,"code":"var _jsxFileName = \"/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/projectbard.js\";\nimport Column from \"./column\";\nimport React, { Component } from \"react\"; //muligen ha alle projects state her og hvilken colonne de hører til, slik at jeg kan pase ned riktig\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      backlogProjects: [],\n      inProgressProjects: [],\n      doneProjects: [],\n      inputBox: false\n    };\n\n    this.addProjects = () => {\n      this.setState({\n        inputBox: true\n      });\n      console.log(this.state.inputBox);\n    };\n\n    this.cancelProject = () => {\n      this.setState({\n        inputBox: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    var arr = [];\n    console.log(\"inif\");\n    var data = await this.fetchProjects();\n    console.log(data[0].id);\n    data.map(d => {\n      const project = {\n        projectId: d.id,\n        projectName: d.name,\n        projectDescription: d.description\n      };\n      arr.push(project);\n    });\n    console.log(arr);\n    this.setState({\n      backlogProjects: [...this.state.backlogProjects, ...arr]\n    });\n  } //må bruke DELETE fetch\n\n\n  async removeProjectReal(id, collumn) {\n    if (collumn == \"backlog\") {\n      const response = await this.deleteProject(id);\n      console.log(response);\n      const newProjectList = this.state.backlogProjects.filter(item => item.projectId !== id);\n      this.setState({\n        backlogProjects: newProjectList\n      });\n    }\n  }\n\n  //her må vi poste til backend\n  async saveProject(newProject) {\n    const body = {\n      Name: newProject.projectName,\n      Description: newProject.projectDescription\n    };\n    const data = await this.postProject(body);\n    console.log(data); //need to have data on right format\n\n    const project = {\n      projectId: data.id,\n      projectName: data.name,\n      projectDescription: data.description\n    };\n    this.setState({\n      backlogProjects: [...this.state.backlogProjects, project],\n      inputBox: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectboard\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        id: \"done\",\n        name: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        id: \"in-progress\",\n        name: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        id: \"backlog\",\n        name: \"Backlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n  async fetchProjects() {\n    console.log(\"in fetch\");\n    const response = await fetch('http://localhost:5000/api/projects');\n    return response.json();\n  }\n\n  async postProject(body) {\n    console.log(\"in save\");\n    const response = await fetch('http://localhost:5000/api/projects', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    return response.json();\n  }\n\n  async deleteProject(id) {\n    const response = await fetch(`http://localhost:5000/api/projects/${id}`, {\n      method: 'DELETE',\n      mode: 'cors'\n    });\n    return response;\n  }\n\n}\n\nexport default ProjectBoard;","map":{"version":3,"sources":["/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/projectbard.js"],"names":["Column","React","Component","ProjectBoard","state","backlogProjects","inProgressProjects","doneProjects","inputBox","addProjects","setState","console","log","cancelProject","componentDidMount","arr","data","fetchProjects","id","map","d","project","projectId","projectName","name","projectDescription","description","push","removeProjectReal","collumn","response","deleteProject","newProjectList","filter","item","saveProject","newProject","body","Name","Description","postProject","render","fetch","json","method","mode","headers","JSON","stringify"],"mappings":"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","sourcesContent":["import Column from \"./column\"\nimport React, {Component} from \"react\"\n\n\n//muligen ha alle projects state her og hvilken colonne de hører til, slik at jeg kan pase ned riktig\n\n\nclass ProjectBoard extends Component {\n\n    state = {\n        backlogProjects: [],\n        inProgressProjects: [],\n        doneProjects: [],\n        inputBox: false\n    }\n\n\n    async componentDidMount() {\n       \n        var arr = []\n        \n        console.log(\"inif\")\n        var data = await this.fetchProjects()\n        console.log(data[0].id)\n        data.map(d => {\n            const project = {projectId: d.id, projectName: d.name, projectDescription: d.description}\n            arr.push(project)\n        })\n        console.log(arr)\n        \n        \n        this.setState({backlogProjects: [...this.state.backlogProjects, ...arr]})\n\n    }\n    \n    \n\n    //må bruke DELETE fetch\n    async removeProjectReal(id, collumn) {\n        if (collumn == \"backlog\"){\n            const response = await this.deleteProject(id)\n            console.log(response)\n            const newProjectList = this.state.backlogProjects.filter((item) => item.projectId !== id );\n            this.setState({\n                backlogProjects: newProjectList\n            })\n        }\n\n    }\n    \n     \n    addProjects = () => {\n        this.setState({\n            inputBox: true\n        })\n        console.log(this.state.inputBox)\n    }\n    \n    \n    //her må vi poste til backend\n    async saveProject(newProject) {\n        const body = { Name: newProject.projectName, Description: newProject.projectDescription}\n        const data = await this.postProject(body)\n        console.log(data)\n        //need to have data on right format\n        const project = {projectId: data.id, projectName: data.name, projectDescription: data.description}\n        this.setState({\n            backlogProjects: [...this.state.backlogProjects, project],\n            inputBox: false\n    })\n    }\n\n    cancelProject = () => {\n        this.setState({\n            inputBox: false\n        })\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"projectboard\">\n                <Column id=\"done\" name=\"Done\"/>\n                <Column id=\"in-progress\" name=\"In Progress\"/>\n                <Column id=\"backlog\" name=\"Backlog\"/>\n            </div> \n        );\n    }\n\n\n\n\n    async fetchProjects() {\n        console.log(\"in fetch\")\n        const response = await fetch('http://localhost:5000/api/projects');\n        return response.json();\n        \n    }\n\n    async postProject(body){\n        console.log(\"in save\")\n        const response = await fetch('http://localhost:5000/api/projects', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify(body)\n        })\n        return response.json()\n        \n    }\n\n    async deleteProject(id){\n        const response = await fetch(`http://localhost:5000/api/projects/${id}`, {\n            method: 'DELETE',\n            mode: 'cors',\n        })\n        return response\n    }\n\n\n\n\n}\n\n\n\nexport default ProjectBoard"]},"metadata":{},"sourceType":"module"}