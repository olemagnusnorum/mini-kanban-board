{"ast":null,"code":"var _jsxFileName = \"/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/column.js\";\nimport Project from \"./project\";\nimport ProjectForm from \"./projectForm\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Column extends Component {\n  /* \n  state = {\n      projects: [],\n      inputBox: false\n  }\n  async componentDidMount() {\n     \n      var arr = []\n      if (this.props.id == \"backlog\"){\n          console.log(\"inif\")\n          var data = await this.fetchProjects()\n          console.log(data[0].id)\n          data.map(d => {\n              const project = {projectId: d.id, projectName: d.name, projectDescription: d.description}\n              arr.push(project)\n          })\n          console.log(arr)\n          \n      }\n      this.setState({projects: [...this.state.projects, ...arr]})\n   }\n  \n  \n  removeProject = (id) => {\n      console.log(id)\n      const newProjectList = this.state.projects.filter((item) => item.projectId !== id );\n      this.setState({\n          projects: newProjectList\n      })\n  }\n   //m책 bruke DELETE fetch\n  async removeProjectReal(id) {\n      const response = await this.deleteProject(id)\n      console.log(response)\n      const newProjectList = this.state.projects.filter((item) => item.projectId !== id );\n      this.setState({\n          projects: newProjectList\n      })\n   }\n  \n   \n  addProjects = () => {\n      this.setState({\n          inputBox: true\n      })\n      console.log(this.state.inputBox)\n  }\n  \n  \n  //her m책 vi poste til backend\n  async saveProject(newProject) {\n      const body = { Name: newProject.projectName, Description: newProject.projectDescription}\n      const data = await this.postProject(body)\n      console.log(data)\n      //need to have data on right format\n      const project = {projectId: data.id, projectName: data.name, projectDescription: data.description}\n      this.setState({\n          projects: [...this.state.projects, project],\n          inputBox: false\n  })\n  }\n   cancelProject = () => {\n      this.setState({\n          inputBox: false\n      })\n  }\n    moveToInProgress = (id) => {\n      var inProgress = \n      console.log(inProgress)\n      var project = this.state.projects.filter((item) => item.projectId !== id );\n      inProgress.setState({\n          projects: [...inProgress.state.projects, project]\n      });\n  }\n  */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), this.props.id == \"backlog\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"create-btn\",\n          onClick: this.props.addProjects,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), this.props.projects.map(project => /*#__PURE__*/_jsxDEV(Project, {\n        columnId: this.props.id,\n        id: project.projectId,\n        name: project.projectName,\n        description: project.projectDescription,\n        removeProject: this.props.removeProjectReal.bind(this),\n        moveLeft: this.props.moveLeft,\n        moveRight: this.props.moveRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 53\n      }, this)), this.props.inputBox && /*#__PURE__*/_jsxDEV(ProjectForm, {\n        saveProject: this.props.saveProject.bind(this),\n        cancelProject: this.props.cancelProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n  /*\n      async fetchProjects() {\n          console.log(\"in fetch\")\n          const response = await fetch('http://localhost:5000/api/projects');\n          return response.json();\n          \n      }\n  \n      async postProject(body){\n          console.log(\"in save\")\n          const response = await fetch('http://localhost:5000/api/projects', {\n              method: 'POST',\n              mode: 'cors',\n              headers: {\n                  'Content-Type': 'application/json'\n                },\n              body: JSON.stringify(body)\n          })\n          return response.json()\n          \n      }\n  \n      async deleteProject(id){\n          const response = await fetch(`http://localhost:5000/api/projects/${id}`, {\n              method: 'DELETE',\n              mode: 'cors',\n          })\n          return response\n      }\n  \n  */\n\n\n}\n\nexport default Column;","map":{"version":3,"sources":["/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/column.js"],"names":["Project","ProjectForm","React","Component","Column","render","props","name","id","addProjects","projects","map","project","projectId","projectName","projectDescription","removeProjectReal","bind","moveLeft","moveRight","inputBox","saveProject","cancelProject"],"mappings":";AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAGA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAG3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOIE,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAK,KAAKC,KAAL,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKD,KAAL,CAAWE,EAAX,IAAiB,SAAjB,iBACD;AAAQ,UAAA,EAAE,EAAC,YAAX;AAAwB,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOK,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,GAApB,CAAwBC,OAAO,iBAAI,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWE,EAA9B;AAAkC,QAAA,EAAE,EAAEI,OAAO,CAACC,SAA9C;AAAyD,QAAA,IAAI,EAAED,OAAO,CAACE,WAAvE;AAAoF,QAAA,WAAW,EAAEF,OAAO,CAACG,kBAAzG;AAA6H,QAAA,aAAa,EAAE,KAAKT,KAAL,CAAWU,iBAAX,CAA6BC,IAA7B,CAAkC,IAAlC,CAA5I;AAAqL,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWY,QAA1M;AAAoN,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWa;AAA1O;AAAA;AAAA;AAAA;AAAA,cAAnC,CAPL,EAQK,KAAKb,KAAL,CAAWc,QAAX,iBAAuB,QAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWe,WAAX,CAAuBJ,IAAvB,CAA4B,IAA5B,CAA1B;AAA6D,QAAA,aAAa,EAAE,KAAKX,KAAL,CAAWgB;AAAvF;AAAA;AAAA;AAAA;AAAA,cAR5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjI+B;;AAsI/B,eAAelB,MAAf","sourcesContent":["\nimport Project from \"./project\"\nimport ProjectForm from \"./projectForm\"\nimport React, {Component} from \"react\"\n\n\nclass Column extends Component {\n\n    \n    /* \n    state = {\n        projects: [],\n        inputBox: false\n    }\n    async componentDidMount() {\n       \n        var arr = []\n        if (this.props.id == \"backlog\"){\n            console.log(\"inif\")\n            var data = await this.fetchProjects()\n            console.log(data[0].id)\n            data.map(d => {\n                const project = {projectId: d.id, projectName: d.name, projectDescription: d.description}\n                arr.push(project)\n            })\n            console.log(arr)\n            \n        }\n        this.setState({projects: [...this.state.projects, ...arr]})\n\n    }\n    \n    \n    removeProject = (id) => {\n        console.log(id)\n        const newProjectList = this.state.projects.filter((item) => item.projectId !== id );\n        this.setState({\n            projects: newProjectList\n        })\n    }\n\n    //m책 bruke DELETE fetch\n    async removeProjectReal(id) {\n        const response = await this.deleteProject(id)\n        console.log(response)\n        const newProjectList = this.state.projects.filter((item) => item.projectId !== id );\n        this.setState({\n            projects: newProjectList\n        })\n\n    }\n    \n     \n    addProjects = () => {\n        this.setState({\n            inputBox: true\n        })\n        console.log(this.state.inputBox)\n    }\n    \n    \n    //her m책 vi poste til backend\n    async saveProject(newProject) {\n        const body = { Name: newProject.projectName, Description: newProject.projectDescription}\n        const data = await this.postProject(body)\n        console.log(data)\n        //need to have data on right format\n        const project = {projectId: data.id, projectName: data.name, projectDescription: data.description}\n        this.setState({\n            projects: [...this.state.projects, project],\n            inputBox: false\n    })\n    }\n\n    cancelProject = () => {\n        this.setState({\n            inputBox: false\n        })\n    }\n\n\n    moveToInProgress = (id) => {\n        var inProgress = \n        console.log(inProgress)\n        var project = this.state.projects.filter((item) => item.projectId !== id );\n        inProgress.setState({\n            projects: [...inProgress.state.projects, project]\n        });\n    }\n*/\n    render(){\n        \n        return (\n            <div className=\"column\">\n                <div>\n                    <h1>{this.props.name}</h1>\n                    {this.props.id == \"backlog\" &&\n                    <button id=\"create-btn\" onClick={this.props.addProjects}>+</button>\n                    }\n                </div>\n                {this.props.projects.map(project => <Project columnId={this.props.id} id={project.projectId} name={project.projectName} description={project.projectDescription} removeProject={this.props.removeProjectReal.bind(this)} moveLeft={this.props.moveLeft} moveRight={this.props.moveRight}/>)}\n                {this.props.inputBox && <ProjectForm saveProject={this.props.saveProject.bind(this)} cancelProject={this.props.cancelProject}/>}\n            </div>\n        );\n    }\n/*\n    async fetchProjects() {\n        console.log(\"in fetch\")\n        const response = await fetch('http://localhost:5000/api/projects');\n        return response.json();\n        \n    }\n\n    async postProject(body){\n        console.log(\"in save\")\n        const response = await fetch('http://localhost:5000/api/projects', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify(body)\n        })\n        return response.json()\n        \n    }\n\n    async deleteProject(id){\n        const response = await fetch(`http://localhost:5000/api/projects/${id}`, {\n            method: 'DELETE',\n            mode: 'cors',\n        })\n        return response\n    }\n\n*/\n}\n\n\n\nexport default Column"]},"metadata":{},"sourceType":"module"}