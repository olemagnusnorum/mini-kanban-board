{"ast":null,"code":"var _jsxFileName = \"/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/projectbard.js\";\nimport Column from \"./column\";\nimport React, { Component } from \"react\"; //muligen ha alle projects state her og hvilken colonne de hører til, slik at jeg kan pase ned riktig\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      backlogProjects: [],\n      inProgressProjects: [],\n      doneProjects: [],\n      inptbox: false\n    };\n\n    this.removeProject = id => {\n      console.log(id);\n      const newProjectList = this.state.projects.filter(item => item.projectId !== id);\n      this.setState({\n        projects: newProjectList\n      });\n    };\n\n    this.addProjects = () => {\n      this.setState({\n        inputBox: true\n      });\n      console.log(this.state.inputBox);\n    };\n\n    this.cancelProject = () => {\n      this.setState({\n        inputBox: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    var arr = [];\n\n    if (this.props.id == \"backlog\") {\n      console.log(\"inif\");\n      var data = await this.fetchProjects();\n      console.log(data[0].id);\n      data.map(d => {\n        const project = {\n          projectId: d.id,\n          projectName: d.name,\n          projectDescription: d.description\n        };\n        arr.push(project);\n      });\n      console.log(arr);\n    }\n\n    this.setState({\n      projects: [...this.state.projects, ...arr]\n    });\n  }\n\n  //må bruke DELETE fetch\n  async removeProjectReal(id) {\n    const response = await this.deleteProject(id);\n    console.log(response);\n    const newProjectList = this.state.projects.filter(item => item.projectId !== id);\n    this.setState({\n      projects: newProjectList\n    });\n  }\n\n  //her må vi poste til backend\n  async saveProject(newProject) {\n    const body = {\n      Name: newProject.projectName,\n      Description: newProject.projectDescription\n    };\n    const data = await this.postProject(body);\n    console.log(data); //need to have data on right format\n\n    const project = {\n      projectId: data.id,\n      projectName: data.name,\n      projectDescription: data.description\n    };\n    this.setState({\n      projects: [...this.state.projects, project],\n      inputBox: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectboard\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        id: \"done\",\n        name: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        id: \"in-progress\",\n        name: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        id: \"backlog\",\n        name: \"Backlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProjectBoard;","map":{"version":3,"sources":["/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/projectbard.js"],"names":["Column","React","Component","ProjectBoard","state","backlogProjects","inProgressProjects","doneProjects","inptbox","removeProject","id","console","log","newProjectList","projects","filter","item","projectId","setState","addProjects","inputBox","cancelProject","componentDidMount","arr","props","data","fetchProjects","map","d","project","projectName","name","projectDescription","description","push","removeProjectReal","response","deleteProject","saveProject","newProject","body","Name","Description","postProject","render"],"mappings":"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","sourcesContent":["import Column from \"./column\"\nimport React, {Component} from \"react\"\n\n\n//muligen ha alle projects state her og hvilken colonne de hører til, slik at jeg kan pase ned riktig\n\n\nclass ProjectBoard extends Component {\n\n    state = {\n        backlogProjects: [],\n        inProgressProjects: [],\n        doneProjects: [],\n        inptbox: false\n    }\n\n\n    async componentDidMount() {\n       \n        var arr = []\n        if (this.props.id == \"backlog\"){\n            console.log(\"inif\")\n            var data = await this.fetchProjects()\n            console.log(data[0].id)\n            data.map(d => {\n                const project = {projectId: d.id, projectName: d.name, projectDescription: d.description}\n                arr.push(project)\n            })\n            console.log(arr)\n            \n        }\n        this.setState({projects: [...this.state.projects, ...arr]})\n\n    }\n    \n    \n    removeProject = (id) => {\n        console.log(id)\n        const newProjectList = this.state.projects.filter((item) => item.projectId !== id );\n        this.setState({\n            projects: newProjectList\n        })\n    }\n\n    //må bruke DELETE fetch\n    async removeProjectReal(id) {\n        const response = await this.deleteProject(id)\n        console.log(response)\n        const newProjectList = this.state.projects.filter((item) => item.projectId !== id );\n        this.setState({\n            projects: newProjectList\n        })\n\n    }\n    \n     \n    addProjects = () => {\n        this.setState({\n            inputBox: true\n        })\n        console.log(this.state.inputBox)\n    }\n    \n    \n    //her må vi poste til backend\n    async saveProject(newProject) {\n        const body = { Name: newProject.projectName, Description: newProject.projectDescription}\n        const data = await this.postProject(body)\n        console.log(data)\n        //need to have data on right format\n        const project = {projectId: data.id, projectName: data.name, projectDescription: data.description}\n        this.setState({\n            projects: [...this.state.projects, project],\n            inputBox: false\n    })\n    }\n\n    cancelProject = () => {\n        this.setState({\n            inputBox: false\n        })\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"projectboard\">\n                <Column id=\"done\" name=\"Done\"/>\n                <Column id=\"in-progress\" name=\"In Progress\"/>\n                <Column id=\"backlog\" name=\"Backlog\"/>\n            </div> \n        );\n    }\n}\n\nexport default ProjectBoard"]},"metadata":{},"sourceType":"module"}