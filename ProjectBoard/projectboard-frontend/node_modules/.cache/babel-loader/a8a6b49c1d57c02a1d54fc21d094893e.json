{"ast":null,"code":"var _jsxFileName = \"/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/column.js\";\nimport Project from \"./project\";\nimport ProjectForm from \"./projectForm\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Column extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      projects: [{\n        projectId: 1,\n        projectName: \"TestProject\",\n        projectDescription: \"this is a test\"\n      }, {\n        projectId: 2,\n        projectName: \"KKKKKK\",\n        projectDescription: \"this is a test\"\n      }],\n      inputBox: false\n    };\n\n    this.removeProject = id => {\n      console.log(id);\n      const newProjectList = this.state.projects.filter(item => item.projectId !== id);\n      this.setState({\n        projects: newProjectList\n      });\n    };\n\n    this.addProjects = () => {\n      this.setState({\n        inputBox: true\n      });\n      console.log(this.state.inputBox); //her må vi poste til backend\n    };\n\n    this.saveProject = newProject => {\n      this.setState({\n        projects: [...this.state.projects, newProject],\n        inputBox: false\n      });\n    };\n\n    this.saveProjectreal = () => {};\n\n    this.cancelProject = () => {\n      this.setState({\n        inputBox: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    var data = [];\n\n    if (this.props.id == \"backlog\") {\n      console.log(\"inif\");\n      data = await this.fetchProjects();\n      console.log(data);\n\n      for (var i = 0; data.length; i++) {\n        var dic = data[i];\n        console.log(dic);\n      }\n    }\n\n    this.setState({\n      projects: [...this.state.projects, ...data]\n    });\n  }\n\n  render() {\n    console.log(\"rendereing\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), this.props.id == \"backlog\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addProjects,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), this.props.id == \"backlog\" && this.state.projects.map(project => /*#__PURE__*/_jsxDEV(Project, {\n        id: project.projectId,\n        name: project.projectName,\n        description: project.projectDescription,\n        removeProject: this.removeProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 83\n      }, this)), this.state.inputBox && /*#__PURE__*/_jsxDEV(ProjectForm, {\n        saveProject: this.saveProject,\n        cancelProject: this.cancelProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n  async fetchProjects() {\n    console.log(\"in fetch\");\n    const response = await fetch('http://localhost:5000/api/projects');\n    return response.json();\n  }\n\n}\n\nexport default Column;","map":{"version":3,"sources":["/Users/ole-magnusnorum/Documents/IT_verket/prep/ProjectBoard/projectboard-frontend/src/components/column.js"],"names":["Project","ProjectForm","React","Component","Column","state","projects","projectId","projectName","projectDescription","inputBox","removeProject","id","console","log","newProjectList","filter","item","setState","addProjects","saveProject","newProject","saveProjectreal","cancelProject","componentDidMount","data","props","fetchProjects","i","length","dic","render","name","map","project","response","fetch","json"],"mappings":"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","sourcesContent":["\nimport Project from \"./project\"\nimport ProjectForm from \"./projectForm\"\nimport React, {Component} from \"react\"\n\n\nclass Column extends Component {\n\n    \n    state = {\n        projects: [{projectId: 1, projectName: \"TestProject\", projectDescription: \"this is a test\"},\n        {projectId: 2, projectName: \"KKKKKK\", projectDescription: \"this is a test\"}],\n        inputBox: false\n    }\n    \n    async componentDidMount() {\n        var data = []\n        if (this.props.id == \"backlog\"){\n            console.log(\"inif\")\n            data = await this.fetchProjects()\n            console.log(data)\n            for (var i = 0; data.length; i++){\n                var dic = data[i]\n                console.log(dic)\n            }\n        }\n        this.setState({projects: [...this.state.projects, ...data]})\n\n    }\n    \n    \n    removeProject = (id) => {\n        console.log(id)\n        const newProjectList = this.state.projects.filter((item) => item.projectId !== id );\n        this.setState({\n            projects: newProjectList\n        })\n    }\n    \n     \n    addProjects = () => {\n        this.setState({\n            inputBox: true\n        })\n        console.log(this.state.inputBox)\n        //her må vi poste til backend\n    }\n\n    saveProject = (newProject) => {\n\n        this.setState({\n            projects: [...this.state.projects, newProject],\n            inputBox: false\n        })\n    }\n\n    saveProjectreal = () => {\n\n    }\n\n    cancelProject = () => {\n        this.setState({\n            inputBox: false\n        })\n    }\n\n    render(){\n        console.log(\"rendereing\")\n        return (\n            <div className=\"column\">\n                <div>\n                    <h1>{this.props.name}</h1>\n                    {this.props.id == \"backlog\" &&\n                    <button onClick={this.addProjects}>Create</button>\n                    }\n                </div>\n\n                {this.props.id == \"backlog\" && this.state.projects.map(project => <Project id={project.projectId} name={project.projectName} description={project.projectDescription} removeProject={this.removeProject}/>)}\n                {this.state.inputBox && <ProjectForm saveProject={this.saveProject} cancelProject={this.cancelProject}/>}\n            </div>\n        );\n    }\n\n    async fetchProjects() {\n        console.log(\"in fetch\")\n        const response = await fetch('http://localhost:5000/api/projects');\n        return response.json();\n        \n    }\n\n\n}\n\n\n\nexport default Column"]},"metadata":{},"sourceType":"module"}